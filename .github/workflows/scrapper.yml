name: Scrapper Build

on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/scrapper.yml
      - scrapper/**

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/scrapper

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    permissions:
      packages: write
      pull-requests: write

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: scrapper
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      zookeeper:
        image: confluentinc/cp-zookeeper:7.3.2
        ports:
          - 2181:2181
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_SERVER_ID: 1
          ZOOKEEPER_SERVERS: zookeeper:2888:3888
        options: >-
          --network-alias zookeeper

      kafka:
        image: confluentinc/cp-kafka:7.3.2
        ports:
          - 9092:9092
        env:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        options: >-
          --network-alias kafka


    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Wait for PostgreSQL
        run: until pg_isready -h localhost -p 5432 -U postgres; do echo 'waiting for postgres'; sleep 5; done

      - name: Wait for Zookeeper
        run: until nc -z -v -w30 localhost 2181; do echo 'waiting for zookeeper'; sleep 5; done

      - name: Wait for Kafka
        run: until nc -z -v -w30 localhost 9092; do echo 'waiting for kafka'; sleep 5; done

      - name: maven build
        run: mvn -pl scrapper -am package

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ./scrapper
          file: ./scrapper/scrapper.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        if: ( github.event_name != 'workflow_dispatch' )
        with:
          paths: ${{ github.workspace }}/scrapper/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 30
          min-coverage-changed-files: 30
          title: Code Coverage
          update-comment: true

  checkstyle:
    name: checkstyle
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - run: mvn -pl scrapper -am checkstyle:check

  integration-test:
    name: integration tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - run: mvn -pl scrapper -am verify -Dskip.unit.tests=true
